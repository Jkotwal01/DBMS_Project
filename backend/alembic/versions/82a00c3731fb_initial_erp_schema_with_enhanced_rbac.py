"""Initial ERP schema with enhanced RBAC

Revision ID: 82a00c3731fb
Revises: 
Create Date: 2025-10-01 17:04:28.143646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '82a00c3731fb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('permission_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_permissions_permission_id'), 'permissions', ['permission_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('STUDENT', 'FACULTY', 'ADMIN', 'PARENT', 'MANAGEMENT', name='roleenum'), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('admins',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('access_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('admin_id'),
    sa.UniqueConstraint('employee_id')
    )
    op.create_table('audit_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('old_values', sa.Text(), nullable=True),
    sa.Column('new_values', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_audit_logs_log_id'), 'audit_logs', ['log_id'], unique=False)
    op.create_table('faculty',
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('designation', sa.String(length=50), nullable=True),
    sa.Column('dept', sa.String(length=100), nullable=True),
    sa.Column('employee_id', sa.String(length=50), nullable=True),
    sa.Column('joining_date', sa.Date(), nullable=True),
    sa.Column('qualification', sa.String(length=200), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('faculty_id'),
    sa.UniqueConstraint('employee_id')
    )
    op.create_table('parents',
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('occupation', sa.String(length=100), nullable=True),
    sa.Column('annual_income', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('parent_id')
    )
    op.create_table('system_settings',
    sa.Column('setting_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('setting_id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_system_settings_setting_id'), 'system_settings', ['setting_id'], unique=False)
    op.create_table('user_permissions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('granted_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('granted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.permission_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'permission_id')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('visible_to', sa.String(length=20), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='notificationpriority'), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['faculty.faculty_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notifications_notification_id'), 'notifications', ['notification_id'], unique=False)
    op.create_table('students',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('roll_no', sa.String(length=50), nullable=False),
    sa.Column('class_name', sa.String(length=50), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('section', sa.String(length=10), nullable=True),
    sa.Column('admission_date', sa.Date(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('guardian_name', sa.String(length=100), nullable=True),
    sa.Column('guardian_phone', sa.String(length=20), nullable=True),
    sa.Column('blood_group', sa.String(length=5), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['parents.parent_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['student_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('student_id'),
    sa.UniqueConstraint('roll_no')
    )
    op.create_table('subjects',
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('subject_name', sa.String(length=100), nullable=False),
    sa.Column('subject_code', sa.String(length=20), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculty.faculty_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('subject_id'),
    sa.UniqueConstraint('subject_code')
    )
    op.create_index(op.f('ix_subjects_subject_id'), 'subjects', ['subject_id'], unique=False)
    op.create_table('attendance',
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('PRESENT', 'ABSENT', 'LATE', 'EXCUSED', name='attendancestatus'), nullable=False),
    sa.Column('marked_by', sa.Integer(), nullable=True),
    sa.Column('marked_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['marked_by'], ['faculty.faculty_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.subject_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('attendance_id'),
    sa.UniqueConstraint('student_id', 'subject_id', 'date', name='u_student_subject_date')
    )
    op.create_index(op.f('ix_attendance_attendance_id'), 'attendance', ['attendance_id'], unique=False)
    op.create_table('grades',
    sa.Column('grade_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('exam_type', sa.String(length=50), nullable=True),
    sa.Column('marks_obtained', sa.Integer(), nullable=True),
    sa.Column('total_marks', sa.Integer(), nullable=True),
    sa.Column('grade_letter', sa.String(length=5), nullable=True),
    sa.Column('exam_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.subject_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('grade_id')
    )
    op.create_index(op.f('ix_grades_grade_id'), 'grades', ['grade_id'], unique=False)
    op.create_table('timetable',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('day', sa.String(length=10), nullable=True),
    sa.Column('time_slot', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.subject_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('class_id')
    )
    op.create_index(op.f('ix_timetable_class_id'), 'timetable', ['class_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_timetable_class_id'), table_name='timetable')
    op.drop_table('timetable')
    op.drop_index(op.f('ix_grades_grade_id'), table_name='grades')
    op.drop_table('grades')
    op.drop_index(op.f('ix_attendance_attendance_id'), table_name='attendance')
    op.drop_table('attendance')
    op.drop_index(op.f('ix_subjects_subject_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_table('students')
    op.drop_index(op.f('ix_notifications_notification_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('user_permissions')
    op.drop_index(op.f('ix_system_settings_setting_id'), table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_table('parents')
    op.drop_table('faculty')
    op.drop_index(op.f('ix_audit_logs_log_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('admins')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_permissions_permission_id'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
